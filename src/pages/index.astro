---
// Pour le rendu côté serveur, continuer avec le français
import Layout from '../layouts/Layout.astro';
import '../styles/global.css';

// Charger les traductions
import fr from '../translations/fr.json';
import en from '../translations/en.json';

const translations = { fr, en };
const defaultLang = 'fr';

// Redirection côté client
if (import.meta.env.SSR === false) {
  const preferredLang = localStorage.getItem('preferredLanguage') || 'fr';
  if (preferredLang === 'en' && !window.location.pathname.startsWith('/en')) {
    window.location.href = '/en';
  }
}
---

<Layout title={defaultLang === 'fr' ? "Movelys - Solution de gestion d'entreprise" : "Movelys - Business Management Solution"}>
    <script>
      // Fonction de recherche améliorée
  
function setupSimpleSearch() {
  const searchInput = document.getElementById('searchInput');
  const searchButton = document.getElementById('searchButton');
  const searchMessage = document.getElementById('searchMessage');
  
  if (!searchInput || !searchButton || !searchMessage) {
    console.error('Éléments de recherche introuvables');
    return;
  }
  
  function showMessage(message, isError = false) {
    searchMessage.textContent = message;
    searchMessage.className = isError ? 'search-message error' : 'search-message';
    searchMessage.style.display = 'block';
    setTimeout(() => {
      searchMessage.style.display = 'none';
    }, 3000);
  }
  
  function removeHighlights() {
    document.querySelectorAll('.search-highlight').forEach(el => {
      const parent = el.parentNode;
      while (el.firstChild) parent.insertBefore(el.firstChild, el);
      parent.removeChild(el);
      parent.normalize();
    });
  }
  
  function performSearch() {
    const term = searchInput.value.trim();
    removeHighlights();
    if (!term) return; // Si vide, on retire tout surlignage et on arrête
    
    const regex = new RegExp(`\\b${term}\\b`, 'gi');
    let found = false;
    
    function searchInNode(node) {
      const childNodes = node.childNodes || [];
      for (let i = 0; i < childNodes.length; i++) {
        const childNode = childNodes[i];
        if (childNode.nodeType === Node.ELEMENT_NODE) {
          const tagName = childNode.tagName.toLowerCase();
          if (['script', 'style', 'textarea', 'input', 'button'].includes(tagName)) {
            continue;
          }
          searchInNode(childNode);
        } else if (childNode.nodeType === Node.TEXT_NODE && childNode.nodeValue.trim()) {
          const text = childNode.nodeValue;
          const parent = childNode.parentNode;
          if (regex.test(text)) {
            found = true;
            const fragment = document.createDocumentFragment();
            let lastIndex = 0;
            let match;
            regex.lastIndex = 0;
            while ((match = regex.exec(text)) !== null) {
              if (match.index > lastIndex) {
                fragment.appendChild(document.createTextNode(text.substring(lastIndex, match.index)));
              }
              const highlight = document.createElement('span');
              highlight.className = 'search-highlight';
              highlight.textContent = match[0];
              fragment.appendChild(highlight);
              lastIndex = match.index + match[0].length;
              if (match.index === regex.lastIndex) {
                regex.lastIndex++;
              }
            }
            if (lastIndex < text.length) {
              fragment.appendChild(document.createTextNode(text.substring(lastIndex)));
            }
            parent.replaceChild(fragment, childNode);
            break;
          }
        }
      }
    }
    searchInNode(document.body);
    if (found) {
      const firstMatch = document.querySelector('.search-highlight');
      if (firstMatch) {
        firstMatch.scrollIntoView({ behavior: 'smooth', block: 'center' });
      }
    } else {
      showMessage("Aucun résultat trouvé", true);
    }
  }
  
  searchButton.onclick = performSearch;
  searchInput.onkeydown = (e) => {
    if (e.key === 'Enter') performSearch();
    // Ajout : effacer = désélectionner
    if (e.key === 'Backspace' || e.key === 'Delete') {
      setTimeout(() => {
        if (!searchInput.value.trim()) removeHighlights();
      }, 0);
    }
  };
  // Ajout : effacer avec la souris
  searchInput.addEventListener('input', () => {
    if (!searchInput.value.trim()) removeHighlights();
  });
}
      
      // Initialiser la recherche quand le DOM est prêt
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', setupSimpleSearch);
      } else {
        setupSimpleSearch();
      }
      
      // Fonction pour mettre à jour la langue
      function updateLanguage(lang) {
        // Mettre à jour la langue dans le stockage local
        localStorage.setItem('preferredLanguage', lang);
        
        // Mettre à jour l'attribut lang de l'élément html
        document.documentElement.lang = lang;
        
        // Mettre à jour la classe active sur les boutons de langue
        document.querySelectorAll('.language-button').forEach(btn => {
          if (btn.dataset.lang === lang) {
            btn.classList.add('active');
          } else {
            btn.classList.remove('active');
          }
        });
        
        // Rediriger vers la page dans la langue sélectionnée
        if (lang === 'en') {
          window.location.href = '/en';
        } else {
          // Si on est sur /en et qu'on revient au français
          if (window.location.pathname.startsWith('/en')) {
            window.location.href = '/';
          }
        }
      }
      
      // Gestionnaire d'événements pour les boutons de langue
      document.querySelectorAll('.language-button').forEach(button => {
        button.addEventListener('click', (e) => {
          e.preventDefault();
          const lang = button.dataset.lang;
          updateLanguage(lang);
        });
      });
      
      // Mettre à jour la classe active sur le bouton de langue actuel
      document.addEventListener('DOMContentLoaded', () => {
        const currentLang = window.location.pathname.startsWith('/en') ? 'en' : 'fr';
        document.querySelectorAll('.language-button').forEach(button => {
          if (button.dataset.lang === currentLang) {
            button.classList.add('active');
          } else {
            button.classList.remove('active');
          }
        });
      });
    </script>

    <!-- Script de gestion du thème -->
    <script is:inline>
      // Fonction pour mettre à jour la langue de la page
      function updateLanguage(lang) {
        // Mettre à jour la langue dans le stockage local
        localStorage.setItem('preferredLanguage', lang);
        
        // Mettre à jour l'attribut lang de l'élément html
        document.documentElement.lang = lang;
        
        // Mettre à jour la classe active sur les boutons de langue
        document.querySelectorAll('.language-button').forEach(button => {
          if (button.dataset.lang === lang) {
            button.classList.add('active');
          } else {
            button.classList.remove('active');
          }
        });
        
        // Recharger la page pour appliquer les traductions
        window.location.href = `/${lang === 'fr' ? '' : lang}`;
      }
      
      document.addEventListener('DOMContentLoaded', function() {
        const themeToggle = document.getElementById('themeToggle');
        const themeIcon = document.getElementById('themeIcon');
        
        if (!themeToggle || !themeIcon) return;
        
        // Icônes pour les thèmes
        const icons = {
          light: '<path d="M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z"/>',
          dark: '<path d="M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z"/>'
        };
        
        // Fonction pour basculer le thème
        function toggleTheme() {
          const isDark = !document.documentElement.classList.contains('dark-theme');
          document.documentElement.classList.toggle('dark-theme', isDark);
          localStorage.setItem('theme', isDark ? 'dark' : 'light');
          themeIcon.innerHTML = isDark ? icons.dark : icons.light;
        }
        
        // Appliquer le thème sauvegardé ou le thème système
        const savedTheme = localStorage.getItem('theme');
        const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        
        if (savedTheme === 'dark' || (!savedTheme && systemPrefersDark)) {
          document.documentElement.classList.add('dark-theme');
          themeIcon.innerHTML = icons.dark;
        } else {
          document.documentElement.classList.remove('dark-theme');
          themeIcon.innerHTML = icons.light;
        }
        
        // Gérer le clic sur le bouton de thème
        themeToggle.addEventListener('click', toggleTheme);
      });
    </script>

    <header class="header">
      <div class="container">
        <div class="logo">
          <img src="/images/logo.png" alt="Movelys Logo" style="height:70px; vertical-align:middle;" />
        </div>
        <div class="search-bar">
          <input type="text" id="searchInput" placeholder="Rechercher..." />
          <button id="searchButton" aria-label="Rechercher">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
              <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"/>
            </svg>
          </button>
        </div>
        <div class="header-actions">
          <button id="themeToggle" class="icon-button" aria-label="Changer de thème">
            <svg id="themeIcon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
              <path d="M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z"/>
            </svg>
          </button>
          <div class="language-selector">
            <button class="language-button" data-lang="fr" aria-label="Version française">FR</button>
            <span class="language-separator">|</span>
            <button class="language-button" data-lang="en" aria-label="English version">EN</button>
          </div>
          <a href="https://github.com/zamboukenfack/reproduction4" target="_blank" rel="noopener noreferrer" aria-label="GitHub">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
              <path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"/>
            </svg>
          </a>
        </div>
      </div>
    </header>

    <main class="main-content">
      <section class="hero">
        <div class="container">
          <div class="hero-text">
            <h1 class="hero-title">{translations[defaultLang].hero.title}</h1>
            <div class="intro-text">
              <p>{translations[defaultLang].hero.intro}</p>
              <p>{translations[defaultLang].hero.description1}</p>
              <p>{translations[defaultLang].hero.description2}</p>
              <p>{translations[defaultLang].hero.objective}</p>
              <ul>
                {translations[defaultLang].hero.lists.features.map((item, index) => (
                  <li set:html={item} />
                ))}
              </ul>
              <p>{translations[defaultLang].hero.automation_benefits}</p>
              <p>{translations[defaultLang].hero.target_audience}</p>
              <ul>
                {translations[defaultLang].hero.lists.roles.map((role, index) => (
                  <li set:html={role} />
                ))}
              </ul>
              <p>{translations[defaultLang].hero.roles_benefits}</p>
            </div>
          </div>
        </div>
      </section>

      <section class="video-section">
        <div class="container">
          <div class="video-intro">
            <p>Pour accéder pleinement à la plateforme <strong>MOVELYS</strong>, nous vous recommandons vivement de visionner la courte vidéo ci-dessous. Elle présente de manière claire et structurée l'ensemble du processus d'onboarding, depuis la connexion initiale jusqu'à l'utilisation avancée des fonctionnalités. Cela vous garantira une prise en main optimale et une expérience utilisateur fluide dès le départ.</p>
          </div>
          <div class="video-wrapper">
            <video controls class="feature-video">
              <source src="video/videos.mp4" type="video/mp4">
              Votre navigateur ne supporte pas la lecture de vidéos.
            </video>
          </div>
          <div class="cta-button">
            <a href="/page" class="btn btn-primary btn-lg">Voir La documentation </a>
          </div>
        </div>
      </section>
    </main>

    <!-- Message de résultat de recherche -->
    <div id="searchMessage" class="search-message"></div>
    
    <script>
      // Contrôle simple de la vidéo au défilement
      document.addEventListener('DOMContentLoaded', () => {
        const video = document.querySelector('.feature-video');
        if (!video) return;
        
        // Configuration de base
        video.muted = true;
        video.playsInline = true;
        
        let lastScrollTop = 0;
        
        // Démarrer la lecture initiale
        video.play().catch(e => console.log('Lecture automatique empêchée:', e));
        
        // Gérer le défilement
        window.addEventListener('scroll', () => {
          const st = window.pageYOffset || document.documentElement.scrollTop;
          
          // Défilement vers le bas
          if (st > lastScrollTop) {
            video.play().catch(e => console.log('Lecture impossible:', e));
          } 
          // Défilement vers le haut
          else if (st < lastScrollTop) {
            video.pause();
          }
          
          lastScrollTop = st <= 0 ? 0 : st;
        }, { passive: true });
      });
    </script>
</Layout>